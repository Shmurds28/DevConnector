{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/spinner.gif","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_REPOS","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","minLength","login","alerts","alert","length","map","src","spinner","style","width","margin","display","alt","DashboardActions","class","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","company","title","format","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twittwer","linkedin","youtube","instagram","facebook","displaySocialInputs","toggleSocialInputs","twitter","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","classname","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","Component","component","rest","render","props","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Provider","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63f9825c.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCES';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_REPOS = 'GET_REPOS';","import {v4 as uuid} from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuid();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n}","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport {setAlert} from './alert'\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = (token) => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR,\r\n           \r\n        });\r\n    }\r\n};\r\n\r\n//Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config);\r\n\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n//Login User\r\nexport const login = ( email, password ) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config);\r\n\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n//Logout / Clear Profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    dispatch({ type: LOGOUT });\r\n}\r\n\r\n","import React, {Fragment} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({auth: {isAuthenticated, loading}, logout}) => {\r\n    const authLinks = (\r\n        <ul>\r\n         <li>\r\n            <Link to=\"/profiles\">\r\n               Developers\r\n            </Link>\r\n        </li>\r\n         <li>\r\n            <Link to=\"/dashboard\">\r\n                <i className='fas fa-user' />{' '}<span>Dashboard</span>\r\n            </Link>\r\n        </li>\r\n\r\n        <li>\r\n            <a onClick={logout} href=\"#!\">\r\n                <i className='fas fa-sign-out-alt' />{' '}\r\n                <span className='hide-sm'>Logout</span> \r\n            </a>\r\n        </li>     \r\n        </ul>\r\n       \r\n    );\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li>\r\n            <Link to=\"/profiles\">\r\n               Developers\r\n            </Link>\r\n        </li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n        </ul>\r\n    );\r\n    \r\n    return (\r\n        <nav className=\"navbar bg-dark\">\r\n            <h1>\r\n                <Link to=\"/\"><i className=\"fas fa-code\"></i> DevConnector</Link>\r\n            </h1>\r\n            {!loading && (<Fragment>{ isAuthenticated ? authLinks : guestLinks } </Fragment>)}\r\n        </nav>\r\n    )\r\n};\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({isAuthenticated}) => {\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    };\r\n\r\n    return (\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n                <div className=\"landing-inner\">\r\n                <h1 className=\"x-large\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                    Create a developer profile/portfolio, share posts and get help from\r\n                    other developers\r\n                </p>\r\n                <div className=\"buttons\">\r\n                    <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n                    <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n// import axios from 'axios';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Passwords do not match', 'danger');\r\n        } else {\r\n            register({name, email, password});\r\n        }\r\n    }\r\n\r\n     //Redirect if Registered\r\n     if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e => onChange(e)}  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >This site uses Gravatar so if you want a profile image, use a\r\n                    Gravatar email</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\" value={password} onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        minLength=\"6\"\r\n                        value={password2} onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();            \r\n        login(email, password);\r\n    };\r\n\r\n    //Redirect if logged in\r\n    if(isAuthenticated){\r\n        return <Redirect to='/dashboard' />\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign In</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n               \r\n                <div className=\"form-group\">\r\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e => onChange(e)} />\r\n    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\" value={password} onChange={e => onChange(e)}\r\n                    />\r\n                </div>\r\n               \r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) => alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n        {alert.msg}\r\n    </div>\r\n));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","export default __webpack_public_path__ + \"static/media/spinner.9962a936.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n    <Fragment>\r\n        <img src={spinner} style={{width: '200px', margin: 'auto', display: 'block'}} alt='Loading...' />\r\n    </Fragment>\r\n);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div class=\"dash-buttons\">\r\n        <Link to=\"/edit-profile\" class=\"btn btn-light\"\r\n          ><i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\r\n        >\r\n        <Link to=\"/add-experience\" class=\"btn btn-light\"\r\n          ><i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link\r\n        >\r\n        <Link to=\"/add-education\" class=\"btn btn-light\"\r\n          ><i class=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link\r\n        >\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DashboardActions","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    ACCOUNT_DELETED,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from './types';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Get All Profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res = await axios.get('api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Get profile by ID\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Get GitHub repos\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n//Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if (!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Added', 'success'));\r\n\r\n            history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Added', 'success'));\r\n\r\n            history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n    try{\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Removed', 'success'));\r\n    }catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try{\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education Removed', 'success'));\r\n    }catch(err){\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Delete account\r\nexport const deleteAccount = id => async dispatch => {\r\n    if (window.confirm('Are you sure? This can NOT be undone!')) {\r\n        try {\r\n           await axios.delete(`/api/profile`);\r\n    \r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: ACCOUNT_DELETED });\r\n    \r\n            dispatch(setAlert('Your account was permanantly deleted', 'success'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\n    \r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport {deleteExperience} from '../../actions/profile'\r\n\r\nconst Experience = ({experience, deleteExperience}) => {\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp._id}>\r\n            <td>{ exp.company}</td>\r\n            <td className=\"hide-sm\">{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> - {\r\n                    exp.to === null ? ('Present') : (<Moment format='YYYY/MM/DD'>{exp.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteExperience(exp._id)} className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Experience Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className=\"hide-sm\">Title</th>\r\n                        <th className=\"hide-sm\">Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{ experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteExperience})(Experience)\r\n","import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport {deleteEducation} from '../../actions/profile'\r\n\r\nconst Education = ({education, deleteEducation}) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td>{ edu.school}</td>\r\n            <td className=\"hide-sm\">{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> - {\r\n                    edu.to === null ? ('Present') : (<Moment format='YYYY/MM/DD'>{edu.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteEducation(edu._id)} className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Education Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className=\"hide-sm\">Degree/Certificate</th>\r\n                        <th className=\"hide-sm\">Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{ educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteEducation})(Education)\r\n","import React, {useEffect, Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({getCurrentProfile, deleteAccount, auth: {user}, profile: {profile, loading}}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [getCurrentProfile]);\r\n\r\n    return loading && profile === null ? (<Spinner />) : (<Fragment>\r\n        <h1 className=\"large text-primary\">Dahsboard</h1>\r\n        <p className=\"lead\">\r\n            <i class=\"fas fa-user\" /> Welcome {user && user.name}\r\n        </p>\r\n        {profile != null ? (\r\n            <Fragment>\r\n                <DashboardActions />\r\n                <Experience experience={profile.experience} />\r\n                <Education education={profile.education} />\r\n\r\n                <div className=\"my-2\">\r\n                    <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                        <i className=\"fas fa-user-minus\">{' '}Delete My Account</i>\r\n                    </button>\r\n                </div>\r\n            </Fragment>\r\n        ) : (\r\n            <Fragment>\r\n                <p>You do not have a profile, please add some info</p>\r\n                    <Link to='/create-profile' className=\"btn btn-primary my-1\">\r\n                        Create Profile\r\n                    </Link>\r\n            </Fragment>\r\n        )}\r\n    </Fragment>);\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({createProfile, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twittwer: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n        facebook: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n                <section className=\"container\">\r\n                <h1 className=\"large text-primary\">\r\n                    Create Your Profile\r\n                </h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                    profile stand out\r\n                </p>\r\n                <small>* = required field</small>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                        >Give us an idea of where you are at in your career</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Could be your own company or one you work for</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Could be your own or a company website</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername} onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                        >If you want your latest repos and a Github link, include your\r\n                        username</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                    </div>\r\n\r\n                    <div className=\"my-2\">\r\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                    </div>\r\n\r\n                    {displaySocialInputs && <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-twitter fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-facebook fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-youtube fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                        </Fragment>}\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n                </form>\r\n                    </section>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: {loading, profile}, createProfile, getCurrentProfile, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twittwer: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n        facebook: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n        });\r\n    }, [loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n                <section className=\"container\">\r\n                <h1 className=\"large text-primary\">\r\n                    Create Your Profile\r\n                </h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                    profile stand out\r\n                </p>\r\n                <small>* = required field</small>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                        >Give us an idea of where you are at in your career</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Could be your own company or one you work for</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Could be your own or a company website</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n                    <small className=\"form-text\"\r\n                        >Please use comma separated values (eg.\r\n                        HTML,CSS,JavaScript,PHP)</small >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername} onChange={e => onChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                        >If you want your latest repos and a Github link, include your\r\n                        username</small\r\n                    >\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                    </div>\r\n\r\n                    <div className=\"my-2\">\r\n                    <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                    </div>\r\n\r\n                    {displaySocialInputs && <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-twitter fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-facebook fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-youtube fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                        </Fragment>}\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                    <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n                </form>\r\n                    </section>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile));","import React, {Fragment, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { company, title, location, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n       Add An Experience\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addExperience(formData, history);\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e => onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n         <div className=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => { setFormData({ ...formData, current: !current }); toggleDisabled(!toDateDisabled); }}  /> {' '} Current Job</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : '' }/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description} onChange={e => onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, {addExperience})(withRouter(AddExperience))","import React, {Fragment, useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({addEducation, history}) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n       Add Your Education\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n      }}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)}  required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field Of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)}  />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n         <div className=\"form-group\">\r\n                    <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => { setFormData({ ...formData, current: !current }); toggleDisabled(!toDateDisabled); }}  /> {' '} Current </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n                    <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : '' }/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description} onChange={e => onChange(e)} \r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({profile: {\r\n    user: {_id, name, avatar},\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n}}) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status} {company && <span>at {company}</span>}</p>\r\n                <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className='btn btn-primary'>View Profile</Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className=\"text-primary\">\r\n                        <i className=\"fas fa-check\"></i>{skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { connect } from 'react-redux';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\n\r\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Spinner /> : <Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i> Browse and connect with developers\r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <ProfileItem key={profile._id} profile={profile} />\r\n                        ))\r\n                    ) : <h4>No profiles found...</h4>}\r\n                </div>\r\n             </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: {name, avatar}\r\n}}) => {\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n        <img\r\n          className=\"round-img my-1\"\r\n          src={avatar}\r\n          alt=\"\"\r\n        />\r\n        <h1 className=\"large\">{name}</h1>\r\n            <p className=\"lead\">{status} { company && <span>  at {company}</span> }</p>\r\n            <p>{location && <span>{ location }</span>}</p>\r\n            <div className=\"icons my-1\">\r\n                {\r\n                    website && (\r\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fas fa-globe fa-2x\"></i>\r\n                      </a>\r\n                    )\r\n                }\r\n                {social && social.twitter && (\r\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-twitter fa-2x\"></i>\r\n                  </a>\r\n                )}\r\n                {social && social.facebook && (\r\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fab fa-facebook fa-2x\"></i>\r\n                  </a>\r\n                )}\r\n                {social && social.linkedin && (\r\n                   <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                 </a>\r\n                )}\r\n                {social && social.youtube && (\r\n                   <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                   <i className=\"fab fa-youtube fa-2x\"></i>\r\n                 </a>\r\n                )}\r\n                {social && social.instagram && (\r\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                    </a>\r\n                )}\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileTop;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({profile: {bio, skills, user: {name}}}) => {\r\n    return (\r\n        <div className=\"profile-about bg-light p-2\">\r\n            {bio && (\r\n                <Fragment>\r\n                    <h2 className=\"text-primary\">{name.trim().split(' ')[0]}'s Bio</h2>\r\n                    <p>{bio}</p>\r\n                    <div className=\"line\"></div>\r\n                </Fragment>\r\n            )}\r\n         \r\n          <h2 className=\"text-primary\">Skill Set</h2>\r\n          <div className=\"skills\">\r\n                {skills.map((skill, index) => (\r\n                    <div key={skill.index} className=\"p-1\">\r\n                        <i className=\"fas fa-check\"></i> {skill}\r\n                </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({experience: {\r\n    company, title, current, to, from, description\r\n}}) =>{\r\n    return (\r\n        <div>\r\n            <h3 classname=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> - {current ? 'Present' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Position: </strong> {title}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileExperience;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({education: {\r\n    school, degree, fieldofstudy, current, to, from, description\r\n}}) =>{\r\n    return (\r\n        <div>\r\n            <h3 classname=\"text-dark\">{school}</h3>\r\n            <p>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> - {current ? 'Present' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n            </p>\r\n            <p>\r\n                <strong>Degree: </strong> {degree}\r\n            </p>\r\n            <p>\r\n                <strong>Field Of Study: </strong> {fieldofstudy}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileEducation;","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {getGithubRepos} from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({username, getGithubRepos, repos}) =>{\r\n    useEffect(() =>{\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos, username]);\r\n\r\n    return (\r\n        <div class=\"profile-github\">\r\n          <h2 class=\"text-primary my-1\">\r\n            <i class=\"fab fa-github\"></i> Github Repos\r\n          </h2>\r\n            {repos === null ? <Spinner /> : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                         <div>\r\n                            <h4><a href={repo.html_url} target=\"_blank\"\r\n                                rel=\"noopener noreferrer\">{repo.name}</a></h4>\r\n                            <p>\r\n                                {repo.description}\r\n                            </p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li class=\"badge badge-primary\">Stars: {repo.stargazers_count}</li>\r\n                                <li class=\"badge badge-dark\">Watchers: {repo.watchers_count}</li>\r\n                                <li class=\"badge badge-light\">Stars: {repo.forks_count}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n          )}\r\n         </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);","import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Router } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport {getProfileById} from '../../actions/profile'\r\n\r\nconst Profile = ({getProfileById, profile:{profile, loading}, auth, match}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n           {profile === null || loading ? <Spinner /> : <Fragment>\r\n                <Link to=\"/profiles\" className=\"btn btn-light\">Back To Profiles</Link>\r\n                {auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && (<Link to=\"/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>)}\r\n                \r\n                <div className=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <div className=\"profile-exp bg-light p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {profile.experience.length > 0 ? (<Fragment>\r\n                            {profile.experience.map(experience => (\r\n                                <ProfileExperience key={experience._id} experience={experience} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>No Experience Credentials</h4>)}\r\n                    </div>\r\n                    <div className=\"profile-edu bg-light p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {profile.education.length > 0 ? (<Fragment>\r\n                            {profile.education.map(education => (\r\n                                <ProfileEducation key={education._id} education={education} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>No Education Credentials</h4>)}\r\n                    </div>\r\n\r\n                    {profile.githubusername && (\r\n                        <ProfileGithub username={profile.githubusername}/>\r\n                    )}\r\n                </div>\r\n\r\n            </Fragment>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nconst PrivateRoute = ({component: Component, auth: {isAuthenticated, loading}, ...rest}) => (\r\n   <Route {...rest} render={props => !isAuthenticated && !loading ? (<Redirect to='/login' />) : (<Component {...props} />)} />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","import { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, GET_REPOS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            };\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROFILES: \r\n        return{\r\n            ...state,\r\n            profiles:payload,\r\n            loading: false\r\n        }\r\n        \r\n        case PROFILE_ERROR:\r\n            return{\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            };\r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport PrivateRoute from './components/routing/PrivateRoute';\n//REdux\nimport { Provider} from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken'\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () =>{\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  \n  return (<Provider\n  Provider store={store}>\n  <Router>\n    <Fragment>\n      <Navbar />\n      <Route exact path='/' component={Landing} />\n      <section className=\"container\">\n        <Alert />\n        <Switch>\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/profiles' component={Profiles} />\n          <Route exact path='/profile/:id' component={Profile} />\n          <PrivateRoute exact path='/dashboard' component={Dashboard} />\n          <PrivateRoute exact path='/create-profile' component={CreateProfile} />\n          <PrivateRoute exact path='/edit-profile' component={EditProfile} />\n          <PrivateRoute exact path='/add-experience' component={AddExperience} />\n          <PrivateRoute exact path='/add-education' component={AddEducation} />\n        </Switch>\n      </section>\n    </Fragment>\n  </Router>\n</Provider>\n)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}